import numpy as np
def f(*X):
    pmax= X[0]
    pmin_multi= X[1]
    ramp_multi= X[2]
    min_up_time= X[3]
    min_down_multi= X[4]
    marg_cst= X[5]
    no_load_cst= X[6]
    startup_cst= X[7]
    return  0.40864746087741576907604 * pmax - 0.21941358264034660496833 * pmin_multi + 0.79736191030881330144009E-002 * ramp_multi + 0.73978359611474045487434E-001 * min_up_time - 2.8741060498275445844740 * min_down_multi - 0.14909721377518056484313 * marg_cst - 0.25536873115737113160151 * no_load_cst - 0.21797382126620740150358 * startup_cst + 0.19088103591765508484923E-002 * pmax**2 - 0.93480725392668592710343E-002 * pmin_multi**2 - 0.77093364798651475844338E-001 * ramp_multi**2 + 0.41723948199400336805942E-002 * min_up_time**2 - 0.96262504987761812053071E-002 * min_down_multi**2 - 0.66469594646882490529549 * marg_cst**2 - 0.71114684973407338297591E-001 * no_load_cst**2 - 0.25015232884836818838536 * startup_cst**2 - 0.10136028334036051301581 * pmin_multi**3 - 0.22801061262332833479149E-001 * min_up_time**3 + 1.9153889798276217959483 * min_down_multi**3 - 0.14225495449230857181178 * marg_cst**3 + 0.82228738296762332593559E-001 * startup_cst**3 - 0.80376281536859980891840E-001 * pmax*pmin_multi + 0.91781824309241158421635E-002 * pmax*min_up_time - 0.11930712734271681219056 * pmax*marg_cst - 0.59029976818539157956689E-001 * pmax*no_load_cst - 0.47506076293732255044766E-001 * pmax*startup_cst - 0.15304046849057294926721E-001 * pmin_multi*min_up_time - 0.16722473296845904999763 * pmin_multi*marg_cst + 0.72479406377254584903369E-001 * pmin_multi*no_load_cst + 0.11817317165458189609506E-001 * pmin_multi*startup_cst - 0.79638376104034472313664E-001 * ramp_multi*marg_cst + 0.22968941829079641409050E-001 * ramp_multi*startup_cst + 0.41442860415886288716347E-001 * min_up_time*marg_cst + 0.19721208502586268229706E-001 * min_up_time*no_load_cst - 0.20523175446270588463682E-002 * min_up_time*startup_cst - 0.49731935282325862024422 * marg_cst*no_load_cst - 0.18568888493334514966371 * marg_cst*startup_cst + 0.89327498817269382347384E-002 * no_load_cst*startup_cst - 0.16929447437982584473426E-001 * (pmax*pmin_multi)**2 + 0.75793835939904172227521E-001 * (pmin_multi*marg_cst)**2 + 0.19443824336677330288925E-001 * (pmin_multi*no_load_cst)**2 + 0.14015794216544492228893E-001 * (ramp_multi*startup_cst)**2 - 0.13374498614397652834773E-001 * (min_up_time*marg_cst)**2 + 0.24894032491046255706202E-001 * (min_up_time*startup_cst)**2 + 0.81521056162422125823674E-001 * (marg_cst*no_load_cst)**2 + 0.16220860051867644346935 * (marg_cst*startup_cst)**2 + 0.17013623457464994992439E-001 * (no_load_cst*startup_cst)**2 - 0.69920270664153016948461E-002 * (pmax*marg_cst)**3 + 0.11304693638913327832785E-001 * (pmax*startup_cst)**3 + 0.30448080578895243136772E-001 * (pmin_multi*marg_cst)**3 + 0.15246085092145481715287E-001 * (pmin_multi*no_load_cst)**3 - 0.12863443715847874479485E-001 * (pmin_multi*startup_cst)**3 + 0.12912105002389571289934E-001 * (ramp_multi*marg_cst)**3 - 0.68801241224653473735340E-002 * (min_up_time*marg_cst)**3 - 0.73695586156210914421938E-002 * (min_up_time*startup_cst)**3 + 0.12181747660259903409674 * (marg_cst*no_load_cst)**3 + 0.10648173013824082863699E-001 * (no_load_cst*startup_cst)**3 
