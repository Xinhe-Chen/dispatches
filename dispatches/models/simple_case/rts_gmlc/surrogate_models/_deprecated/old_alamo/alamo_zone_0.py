import numpy as np
def f(*X):
    pmax= X[0]
    pmin_multi= X[1]
    ramp_multi= X[2]
    min_up_time= X[3]
    min_down_multi= X[4]
    marg_cst= X[5]
    no_load_cst= X[6]
    startup_cst= X[7]
    return  0.10492033573400522811214E-001 * pmax + 0.10885271032368205867957 * pmin_multi + 1485.7288144623141761258 * ramp_multi - 0.60355578602800101506443E-001 * min_up_time - 0.92986313355831479859903E-002 * min_down_multi + 0.84512193623549292098573 * marg_cst + 0.12876656664225355486408 * no_load_cst + 0.17109019226328400775650 * startup_cst - 0.56215190792762333160670E-002 * pmax**2 + 0.22813774492292668294446 * pmin_multi**2 - 1.7611470811309082318274 * ramp_multi**2 - 0.38871533265173912122248E-002 * min_up_time**2 - 0.38986626851501677247513E-002 * min_down_multi**2 + 0.63800292356684218386675 * marg_cst**2 + 0.60923366384572463783087E-001 * no_load_cst**2 + 0.20221683256534445094488 * startup_cst**2 - 0.10145509052626980328604 * pmin_multi**3 - 990.37724342669400812156 * ramp_multi**3 + 0.14680759018826174816530E-001 * min_up_time**3 + 0.78840249508204136158485E-002 * marg_cst**3 - 0.83077917832294206901267E-001 * startup_cst**3 + 0.93319821910668784153975E-002 * pmax*pmin_multi + 0.31489575706150414735607E-001 * pmax*marg_cst + 0.99399275369338232349881E-002 * pmax*startup_cst - 0.85252120249133707396982E-002 * pmin_multi*ramp_multi - 0.21788969405621603733260E-003 * pmin_multi*min_up_time + 0.44500054491163391900965E-001 * pmin_multi*marg_cst - 0.34725305319366753242782E-001 * pmin_multi*no_load_cst + 0.28567963355697334471017E-001 * pmin_multi*startup_cst - 0.77378264009991164565361E-002 * ramp_multi*startup_cst - 0.37504401420611295503438E-001 * min_up_time*marg_cst + 0.53249325042788288667173E-002 * min_up_time*no_load_cst + 0.94635861998442517839525E-002 * min_up_time*startup_cst + 0.34604718515853921667613 * marg_cst*no_load_cst + 0.14492051195006472319449 * marg_cst*startup_cst - 0.26677822745341632504346E-001 * no_load_cst*startup_cst + 0.11300017889363406578540E-001 * (pmin_multi*min_up_time)**2 - 0.60257544641893097392416E-001 * (pmin_multi*marg_cst)**2 - 0.13556202910695855368139E-001 * (pmin_multi*no_load_cst)**2 - 0.35520197091523396382140E-001 * (pmin_multi*startup_cst)**2 + 0.72984351840789133888943E-002 * (min_up_time*min_down_multi)**2 - 0.24987775139198514090522E-001 * (min_up_time*startup_cst)**2 - 0.41353013205729573231739E-001 * (marg_cst*no_load_cst)**2 - 0.85931471656423508154177E-001 * (marg_cst*startup_cst)**2 - 0.89580965240204299404603E-002 * (no_load_cst*startup_cst)**2 - 0.57299980825306282006260E-002 * (pmax*marg_cst)**3 - 0.29533314812118073924840E-002 * (pmin_multi*min_up_time)**3 + 0.42639631146922435042668E-002 * (pmin_multi*marg_cst)**3 + 0.14661323083532460873069E-001 * (pmin_multi*no_load_cst)**3 - 0.11774510146447101158196E-001 * (pmin_multi*startup_cst)**3 + 0.46178247625916274063385E-002 * (min_up_time*marg_cst)**3 + 0.63998353588173000766615E-002 * (min_up_time*startup_cst)**3 - 0.96040860274068745594533E-001 * (marg_cst*no_load_cst)**3 - 0.56851220772168101214028E-002 * (marg_cst*startup_cst)**3 + 0.12966229479321219122956E-001 * (no_load_cst*startup_cst)**3 
