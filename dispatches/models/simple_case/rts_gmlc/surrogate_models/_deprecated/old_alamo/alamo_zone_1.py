import numpy as np
def f(*X):
    pmax= X[0]
    pmin_multi= X[1]
    ramp_multi= X[2]
    min_up_time= X[3]
    min_down_multi= X[4]
    marg_cst= X[5]
    no_load_cst= X[6]
    startup_cst= X[7]
    return   - 0.21338245805014845191128E-001 * pmax - 0.20040585040503888780705 * pmin_multi - 2461.7344069715436489787 * ramp_multi + 0.17080357251589495248822 * min_up_time + 0.39057676911708298639336E-001 * min_down_multi + 0.45889720725900678965914 * marg_cst - 0.19760289575514705662229 * no_load_cst - 0.21262236030346901016763 * startup_cst + 0.11200721923704613086636E-001 * pmax**2 - 0.72506374262452522039268 * pmin_multi**2 + 2.9769714030910230384563 * ramp_multi**2 + 0.18905441489147044309416E-001 * min_up_time**2 + 0.14509334100818200175703E-002 * min_down_multi**2 - 0.68285008731584651009427 * marg_cst**2 - 0.10420487957711525861537 * no_load_cst**2 - 0.55307145542211755273598 * startup_cst**2 + 0.35846692326262796779446 * pmin_multi**3 + 1641.0271096645781199186 * ramp_multi**3 - 0.38052627479037516577964E-001 * min_up_time**3 - 0.36477079015865981892475 * marg_cst**3 + 0.19323453980531091200845 * startup_cst**3 - 0.11286522271730698926961E-001 * pmax*ramp_multi - 0.57249487957230837942291E-001 * pmax*marg_cst - 0.11328227753410361616782E-001 * pmax*startup_cst - 0.33084633165397785321826E-002 * pmin_multi*ramp_multi + 0.15696626063477870510754E-001 * pmin_multi*min_up_time - 0.27026033413136796995646E-001 * pmin_multi*marg_cst + 0.81207654708284018885145E-001 * pmin_multi*no_load_cst - 0.72262259160774014454809E-001 * pmin_multi*startup_cst - 0.16153275114983055987805E-001 * ramp_multi*marg_cst - 0.11129106748260668424688E-001 * ramp_multi*no_load_cst - 0.12271438241102420110828E-001 * ramp_multi*startup_cst + 0.53541258015148765481150E-001 * min_up_time*min_down_multi + 0.94051762736667043895977E-001 * min_up_time*marg_cst - 0.14309431928126285088476E-001 * min_up_time*no_load_cst - 0.67110568190758612683311E-001 * min_up_time*startup_cst + 0.37768375862299155554247E-001 * min_down_multi*startup_cst - 0.53211793641129379039967 * marg_cst*no_load_cst - 0.13242904391596804769549 * marg_cst*startup_cst + 0.10360441238820282394695 * no_load_cst*startup_cst - 0.15774585731603223137665E-001 * (pmin_multi*ramp_multi)**2 - 0.34504502202773769392596E-001 * (pmin_multi*min_up_time)**2 + 0.15828639878001019014597 * (pmin_multi*marg_cst)**2 + 0.32899431848423373037082E-001 * (pmin_multi*no_load_cst)**2 + 0.11862856136118095362608 * (pmin_multi*startup_cst)**2 - 0.17617897264066137430483E-001 * (min_up_time*min_down_multi)**2 + 0.77042492740543061513492E-001 * (min_up_time*startup_cst)**2 + 0.10867434395539523478424E-001 * (min_down_multi*startup_cst)**2 + 0.55384008415161181670960E-001 * (marg_cst*no_load_cst)**2 + 0.14818519578212693832420 * (marg_cst*startup_cst)**2 + 0.26358432140601715382155E-001 * (no_load_cst*startup_cst)**2 + 0.11586548080254107512266E-001 * (pmax*marg_cst)**3 + 0.12281812672150610801780E-001 * (pmin_multi*ramp_multi)**3 + 0.80040465791900647363200E-002 * (pmin_multi*min_up_time)**3 + 0.32499143332198657772858E-002 * (pmin_multi*min_down_multi)**3 - 0.29700414086864829199541E-001 * (pmin_multi*marg_cst)**3 - 0.55692791700695964962620E-001 * (pmin_multi*no_load_cst)**3 + 0.38878856259779610848870E-001 * (pmin_multi*startup_cst)**3 + 0.93358792864025284818918E-002 * (ramp_multi*startup_cst)**3 - 0.97021346058978122361971E-002 * (min_up_time*min_down_multi)**3 - 0.79501428752106716169035E-002 * (min_up_time*marg_cst)**3 - 0.14912932488051753796010E-001 * (min_up_time*startup_cst)**3 - 0.20650445908047900672733E-001 * (min_down_multi*startup_cst)**3 + 0.15290596639761860897622 * (marg_cst*no_load_cst)**3 - 0.83904733285571006518033E-002 * (marg_cst*startup_cst)**3 - 0.39923037648528655885194E-001 * (no_load_cst*startup_cst)**3 
