import numpy as np
def f(*X):
    pmax= X[0]
    pmin_multi= X[1]
    ramp_multi= X[2]
    min_up_time= X[3]
    min_down_multi= X[4]
    marg_cst= X[5]
    no_load_cst= X[6]
    startup_cst= X[7]
    return  0.27306125875958032339641E-001 * pmax - 0.44271863654269986987355E-001 * pmin_multi + 0.43266973375900263931726 * ramp_multi - 0.47229732567323316760888E-001 * min_up_time - 0.12160829492714188629354E-001 * min_down_multi + 0.20789529921029961667678E-001 * marg_cst - 0.76761303410533901492308E-001 * no_load_cst - 0.23595906530182422788933 * startup_cst + 0.32322868946688114444310E-001 * pmax**2 - 1.0409288277244070908267 * ramp_multi**2 + 0.67470184954942419297552E-001 * min_up_time**2 - 0.46855240832857381061416 * marg_cst**2 - 0.87698767068746519282030E-001 * no_load_cst**2 - 0.80780286403225765035074E-001 * startup_cst**2 - 0.11704591111435690142795 * marg_cst**3 + 0.22292793673177262181451E-001 * pmax*ramp_multi - 0.41700786417443166942398E-001 * pmax*marg_cst - 0.57259133754137124527883E-001 * pmin_multi*ramp_multi - 0.15417633424740924755203E-001 * pmin_multi*min_up_time - 0.59109835502442135968248E-001 * pmin_multi*marg_cst + 0.21288844690988333735460E-001 * pmin_multi*no_load_cst - 0.22101114550867557995151E-001 * pmin_multi*startup_cst + 0.11028634053489315414165 * ramp_multi*min_up_time + 0.16555809812033812911114E-001 * ramp_multi*min_down_multi - 0.17866779755690162523329 * ramp_multi*marg_cst + 3.9550155547488428098291 * ramp_multi*no_load_cst - 0.42459165074809179785120E-001 * ramp_multi*startup_cst - 0.12325152614767109424121E-001 * min_up_time*min_down_multi + 0.45759887483587547568620E-002 * min_up_time*marg_cst - 0.10591658265977589234441E-001 * min_up_time*no_load_cst + 0.88545466128581176712409E-001 * min_up_time*startup_cst + 0.63558379107208240899746E-003 * min_down_multi*startup_cst - 0.19827097584863967449920 * marg_cst*no_load_cst - 0.18948275744517795171618 * marg_cst*startup_cst + 0.22434134034416734759798E-001 * no_load_cst*startup_cst + 0.11149850619634681450631E-001 * (pmax*pmin_multi)**2 - 0.26627006565934183135447E-001 * (pmax*ramp_multi)**2 + 0.13581238362186833293355E-001 * (pmin_multi*marg_cst)**2 - 0.13969869643104987008697E-001 * (pmin_multi*startup_cst)**2 - 0.44523040383502666961224E-001 * (ramp_multi*min_up_time)**2 + 0.12812551077606060268010 * (ramp_multi*marg_cst)**2 + 0.64436459103487261912413E-001 * (ramp_multi*no_load_cst)**2 + 0.19595588064348967716199 * (ramp_multi*startup_cst)**2 - 0.20495660886392590149807E-001 * (min_up_time*startup_cst)**2 + 0.20388967174439092538973E-001 * (marg_cst*no_load_cst)**2 + 0.46262469765683211786467E-001 * (marg_cst*startup_cst)**2 - 0.10448470253334772930853E-001 * (pmin_multi*startup_cst)**3 - 0.10139157715532471151776E-001 * (ramp_multi*min_up_time)**3 + 0.31241052278410851722468E-001 * (ramp_multi*marg_cst)**3 - 1.7911256337862211385215 * (ramp_multi*no_load_cst)**3 + 0.10669393232445192887248 * (ramp_multi*startup_cst)**3 - 0.45409262960441846429527E-002 * (min_up_time*marg_cst)**3 - 0.46515822305607046685538E-002 * (min_up_time*startup_cst)**3 + 0.93110790239465911211081E-002 * (min_down_multi*startup_cst)**3 + 0.44418508295369016347642E-001 * (marg_cst*no_load_cst)**3 - 0.21879938491332028699388E-001 * (no_load_cst*startup_cst)**3 + 1.2057744456262773358191 
